version: 0.2

env:
  variables:
    RELEASE_VERSION: "1.0.0"

phases:
  install:
    commands:
      - echo Build started on `date`
      - export PREV_BUILD_VERSION=$(aws ssm get-parameter --name "$ARTIFACT_VERSION_PARAMETER_NAME" --output text --query Parameter.Value)
      - export INC_BUILD_VERSION=$(( $PREV_BUILD_VERSION + 1 ))
      - export THIS_BUILD_VERSION=$RELEASE_VERSION.$INC_BUILD_VERSION
      - export FIRSTRX_LATEST_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$FIRSTRX_ECR_REPOSITORY_NAME:latest
      - export PRESCRIPTIONS_LATEST_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$PRESCRIPTIONS_ECR_REPOSITORY_NAME:latest
      - export LOCATION_LATEST_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$LOCATION_ECR_REPOSITORY_NAME:latest
      - export TEXT_MESSAGES_LATEST_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$TEXT_MESSAGES_ECR_REPOSITORY_NAME:latest
      - export FIRSTRX_IMAGE_URI=$ECR_REPOSITORY_BASE_URL/$FIRSTRX_ECR_REPOSITORY_NAME:$THIS_BUILD_VERSION
      - export PRESCRIPTIONS_IMAGE_URI=$ECR_REPOSITORY_BASE_URL/$PRESCRIPTIONS_ECR_REPOSITORY_NAME:$THIS_BUILD_VERSION
      - export LOCATION_IMAGE_URI=$ECR_REPOSITORY_BASE_URL/$LOCATION_ECR_REPOSITORY_NAME:$THIS_BUILD_VERSION
      - export TEXT_MESSAGES_IMAGE_URI=$ECR_REPOSITORY_BASE_URL/$TEXT_MESSAGES_ECR_REPOSITORY_NAME:$THIS_BUILD_VERSION
      - export FIRSTRX_ENV_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$FIRSTRX_ECR_REPOSITORY_NAME:$ENV
      - export PRESCRIPTIONS_ENV_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$PRESCRIPTIONS_ECR_REPOSITORY_NAME:$ENV
      - export LOCATION_ENV_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$LOCATION_ECR_REPOSITORY_NAME:$ENV
      - export TEXT_MESSAGES_ENV_CONTAINER_URI=$ECR_REPOSITORY_BASE_URL/$TEXT_MESSAGES_ECR_REPOSITORY_NAME:$ENV
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPOSITORY_BASE_URL
  build:
    commands:
      - cp taskdefinition.json /tmp/taskdefinition_envsub.json 
      - cp appspec.yaml /tmp/appspec_envsub.yaml 
      - cd services/prescriptions
      - docker build -f "Dockerfile" -t "$PRESCRIPTIONS_LATEST_CONTAINER_URI" .
      - docker tag $PRESCRIPTIONS_LATEST_CONTAINER_URI $PRESCRIPTIONS_IMAGE_URI
      - docker tag $PRESCRIPTIONS_LATEST_CONTAINER_URI $PRESCRIPTIONS_ENV_CONTAINER_URI
      - docker push $PRESCRIPTIONS_LATEST_CONTAINER_URI
      - docker push $PRESCRIPTIONS_IMAGE_URI
      - docker push $PRESCRIPTIONS_ENV_CONTAINER_URI
      - cd ../location
      - docker build -f "Dockerfile" -t "$LOCATION_LATEST_CONTAINER_URI" .
      - docker tag $LOCATION_LATEST_CONTAINER_URI $LOCATION_IMAGE_URI
      - docker tag $LOCATION_LATEST_CONTAINER_URI $LOCATION_ENV_CONTAINER_URI
      - docker push $LOCATION_LATEST_CONTAINER_URI
      - docker push $LOCATION_IMAGE_URI
      - docker push $LOCATION_ENV_CONTAINER_URI
      - cd ../text_messages
      - docker build -f "Dockerfile" -t "$TEXT_MESSAGES_LATEST_CONTAINER_URI" .
      - docker tag $TEXT_MESSAGES_LATEST_CONTAINER_URI $TEXT_MESSAGES_IMAGE_URI
      - docker tag $TEXT_MESSAGES_LATEST_CONTAINER_URI $TEXT_MESSAGES_ENV_CONTAINER_URI
      - docker push $TEXT_MESSAGES_LATEST_CONTAINER_URI
      - docker push $TEXT_MESSAGES_IMAGE_URI
      - docker push $TEXT_MESSAGES_ENV_CONTAINER_URI
      - cd ../../client
      - docker build -f "Dockerfile" -t "$FIRSTRX_LATEST_CONTAINER_URI" .
      - docker tag $FIRSTRX_LATEST_CONTAINER_URI $FIRSTRX_IMAGE_URI
      - docker tag $FIRSTRX_LATEST_CONTAINER_URI $FIRSTRX_ENV_CONTAINER_URI
      - docker push $FIRSTRX_LATEST_CONTAINER_URI
      - docker push $FIRSTRX_IMAGE_URI
      - docker push $FIRSTRX_ENV_CONTAINER_URI
      - aws ssm put-parameter --name $ARTIFACT_VERSION_PARAMETER_NAME --value $INC_BUILD_VERSION --overwrite
      - envsubst <  /tmp/taskdefinition_envsub.json | tee /tmp/taskdefinition.json 
      - envsubst < /tmp/appspec_envsub.yaml | tee /tmp/appspec.yaml 
  post_build:
    commands:
      - printf "{\"ImageURI\":\"$FIRSTRX_IMAGE_URI\"}" > imageDetail.json
      - cat imageDetail.json
      - printf "[{\"name\":\"firstrx\", \"imageUri\":\"$FIRSTRX_IMAGE_URI\"}]" > imagedefinitions.json
      - cat imagedefinitions.json
      - echo Build completed on `date`

artifacts:
  files: 
    - /tmp/taskdefinition.json
    - /tmp/appspec.yaml
    - imageDetail.json
    - imagedefinitions.json
  discard-paths: yes